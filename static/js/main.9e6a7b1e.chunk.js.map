{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","GetMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"kVAgBeA,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,oBACb,8IAIA,8D,wFCuCSC,MA1Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,yBAAKP,UAAU,SACb,kBAAC,IAAD,CACEQ,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,YAIJ,yBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACb,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBACXO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOf,UAAU,iBACvBc,OAIP,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAG,KAAhD,WCkCKC,G,iNA9DbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEASAC,IAAMC,IACd,4DAVQ,gBAOEJ,EAPF,EAMRK,KACEA,KAAQL,OAQZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAfzB,2C,mFAmBVQ,KAAKN,c,+BAGE,MAGuBM,KAAKjB,MAA3BS,EAHD,EAGCA,UAAWC,EAHZ,EAGYA,OAGnB,OACE,6BAASpB,UAAU,aAChBmB,EACC,yBAAKnB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZoB,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,kB,GArDXuB,IAAMC,YCkBVC,E,4LApBO,MAEYL,KAAK9B,MAA3BoC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,aAGKC,IAAnBF,EAASvB,OACXwB,EAAQE,KAAK,O,+BAGP,IACAH,EAAaN,KAAK9B,MAAlBoC,SAER,OAAIA,EAASvB,MACJ,8BAAOuB,EAASvB,MAAMN,OAEtB,S,GAhBQ0B,IAAMC,W,MCeZM,MAXf,WAGE,OACE,yBAAKrC,UAAU,OACb,kBAAC,IAAD,CAAMQ,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCcS8B,MAlBf,WAQE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,kBAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW7C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,aAAaE,UAAWT,MCT1CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9e6a7b1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props) {\n  console.log(props);\n  return (\n    <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follows.”\n      </span>\n      <span>− George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// If component donxw't need state, just Use function, not class\n// Html in function or component is JSX, thus we must use className, not class\n// Map give two data, item and itemNumber => You can use itemNumber as key to prevent error\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${id}`,\n          state: {\n            year,\n            title,\n            summary,\n            poster,\n            genres\n          }\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // 비동기 함수 예약어 async > async funcion() / async ()\n  // 비동기 동작 대상 await\n  // 비동기 수행을 위한 예약어 await. await를 사용하기 위해선 함수 앞에 async 선언\n  GetMovies = async () => {\n    // Get json by api with axios\n    // const moveis = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n    // Get json data ( json > data > data > movies)\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n\n    // Short cut\n    // this.setState({ movies : movies})\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.GetMovies();\n  }\n\n  render() {\n    // To short cut apporaching state date, use below code\n    // this.state.isLoading\n    const { isLoading, movies } = this.state;\n\n    // Deliever Movie parameter data, Get Movie HTML\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    // location, history, .. etc props은 Route 으로부터 주어짐\n    const { location, history } = this.props;\n    // 클릭에 의한 것이 아닌 임의적으로 주소를 통해 들어온 경우 전달받은 props이 없음\n    // 이 경우 Component 가 정상작동 하지 않으므로, 홈으로 Redirectinfg\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n  render() {\n    const { location } = this.props;\n    // render() 가 componentDidMount() 보다 빠르므로 예외 방지\n    if (location.state) {\n      return <span>{location.state.title}</span>;\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { func } from \"prop-types\";\nimport \"./Navigation.css\";\n\n// To use \"Link\" from \"react-router-dom\", be mind usage from App.js\nfunction Navigation() {\n  // \"a\" with \"href\" will kill and refresh react to load new things\n  // \"link\" with \"to\" will not kill and jus refresh react\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  // path: \"https://<URL>/<HASH>\"\" 이후 부분의 url\n  // path=\"/about\" => \"https://<URL>/<HASH>/about\"\n\n  // exact={true} 일 경우, 정확하게 일치하는 path에서만 랜더링\n\n  // Cause navigation has \"Link\" from \"react-router-dom\",\n  // <Navigation> must be inside <HashRouter>\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// App : Component : The function what return HTML\n// <App /> : The format what can use component\n\n// When react use component to write HTML, code like this\n// This combination (js and HTML) is JSX\n\n// React Apllicagtion can render one component at once\n// To use multiple component, import component from App component\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}