{"ast":null,"code":"var _jsxFileName = \"/Users/chan/code/JsHtmlCss/WebService-with-ReactJs/src/Movie.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\"; // If component donxw't need state, just Use function, not classx\n// Html in function or component is JSX, thus we must use className, not class\n// Map give two data, item and itemNumber => You can use itemNumber as key to prevent error\n\nfunction Movie({\n  id,\n  year,\n  title,\n  summary,\n  poster,\n  genres\n}) {\n  return React.createElement(\"div\", {\n    className: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"movie__img\",\n    src: poster,\n    alt: title,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"movie__infor infor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"infor__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, title), React.createElement(\"h5\", {\n    className: \"infor__year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, year)), React.createElement(\"div\", {\n    className: \"movie__overlay-infor overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"overlay__title-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"movie__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title), React.createElement(\"h5\", {\n    className: \"movie__year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, year)), React.createElement(\"ul\", {\n    className: \"genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, genres.map((genre, index) => React.createElement(\"li\", {\n    key: index,\n    className: \"genres__genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, genre))), React.createElement(\"p\", {\n    className: \"movie__summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, summary)));\n}\n\nMovie.prototype = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Movie;","map":{"version":3,"sources":["/Users/chan/code/JsHtmlCss/WebService-with-ReactJs/src/Movie.js"],"names":["React","PropTypes","Movie","id","year","title","summary","poster","genres","map","genre","index","prototype","number","isRequired","string","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA;AAApC,CAAf,EAA6D;AAC3D,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAED,MAAjC;AAAyC,IAAA,GAAG,EAAEF,KAA9C;AAAqD,IAAA,KAAK,EAAEA,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAA7B,CAFF,CAFF,EAME;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,KAA9B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAA7B,CAFF,CADF,EAKE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACV;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADD,CADH,CALF,EAYE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BJ,OAA/B,CAZF,CANF,CADF;AAuBD;;AAEDJ,KAAK,CAACU,SAAN,GAAkB;AAChBT,EAAAA,EAAE,EAAEF,SAAS,CAACY,MAAV,CAAiBC,UADL;AAEhBV,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UAFP;AAGhBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBD,UAHR;AAIhBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAAV,CAAiBD,UAJV;AAKhBP,EAAAA,MAAM,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UALT;AAMhBN,EAAAA,MAAM,EAAEP,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACc,MAA5B,EAAoCD;AAN5B,CAAlB;AASA,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// If component donxw't need state, just Use function, not classx\n// Html in function or component is JSX, thus we must use className, not class\n// Map give two data, item and itemNumber => You can use itemNumber as key to prevent error\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img className=\"movie__img\" src={poster} alt={title} title={title}></img>\n      <div className=\"movie__infor infor\">\n        <h3 className=\"infor__title\">{title}</h3>\n        <h5 className=\"infor__year\">{year}</h5>\n      </div>\n      <div className=\"movie__overlay-infor overlay\">\n        <div className=\"overlay__title-holder\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n        </div>\n        <ul className=\"genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary}</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.prototype = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}