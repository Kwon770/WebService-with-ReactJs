{"ast":null,"code":"var _jsxFileName = \"/Users/chan/code/JsHtmlCss/WebService-with-ReactJs/src/App.js\";\nimport React from \"react\";\nimport Potato from \"./Potato.js\";\nimport PropTypes from \"prop-types\";\nimport { waitForDomChange } from \"@testing-library/react\"; // To work from localhost web, Do '$ npm start' and Don't kill console\n// Automatic refesh web from react\n// Generate element with react and App.js\n// and Put html in div.id=root of index.html virtually\n// Food(props) : props is object. object.name\n// Food({ name }) : name is value. name\n\nfunction Like({\n  name,\n  img,\n  rating\n}) {\n  // Make alt=\"\" to avoid warning\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"I also like \", name), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, rating, \"/5\"), React.createElement(\"img\", {\n    src: img,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nLike.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\nconst gameILike = [{\n  id: 1,\n  name: \"RS6\",\n  image: \"https://w.namu.la/s/0684acaa1c614dd71c1d8dfcdd93e442d6d448eeffe26327a6729ccb1a57cdc8a3747cff9efeae90a1a7bb474463918a44bd2f00f68ce4869955acb745e4fb01619818165ebff3d4f330d779538607ba6f2ea1b8f708ef7b94200d66b2a55b63\",\n  rating: 5\n}, {\n  id: 2,\n  name: \"Tarkov\",\n  image: \"https://ww.namu.la/s/0172241fbd015b40724cffdb4e6cfafaf29e9630a63b94541527b3be7c42bdc765ce59a0b9e628e2f94303453739ea733da03fffab11f7199bcca39c3ae8b83670e260d51bc0f36cac4b0e61f02c8b9c507aa1566cd9215e814f624750cbdfc6b7e4636996a55ed5480adb7400fb4b68\",\n  rating: 4\n}];\n\nfunction App() {\n  // Keep element unique, Make id in list and Send key={element.id} to component\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Hello!\"), React.createElement(Potato, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Like, {\n    name: \"kimchi\",\n    isKoreans: true,\n    rating: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Like, {\n    name: \"cheese\",\n    isKoreans: false,\n    rating: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Like, {\n    name: \"sushi\",\n    isKoreans: false,\n    rating: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), gameILike.map(ele => React.createElement(Like, {\n    key: ele.id,\n    name: ele.name,\n    img: ele.image,\n    rating: ele.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chan/code/JsHtmlCss/WebService-with-ReactJs/src/App.js"],"names":["React","Potato","PropTypes","waitForDomChange","Like","name","img","rating","propTypes","string","isRequired","number","gameILike","id","image","App","map","ele"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,wBAAjC,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAd,EAAqC;AACnC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBF,IAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,MAAL,OAFF,EAGE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,GAAG,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAEDD,IAAI,CAACI,SAAL,GAAiB;AACfH,EAAAA,IAAI,EAAEH,SAAS,CAACO,MAAV,CAAiBC,UADR;AAEfJ,EAAAA,GAAG,EAAEJ,SAAS,CAACO,MAAV,CAAiBC,UAFP;AAGfH,EAAAA,MAAM,EAAEL,SAAS,CAACS,MAAV,CAAiBD;AAHV,CAAjB;AAMA,MAAME,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEER,EAAAA,IAAI,EAAE,KAFR;AAGES,EAAAA,KAAK,EACH,sNAJJ;AAKEP,EAAAA,MAAM,EAAE;AALV,CADgB,EAQhB;AACEM,EAAAA,EAAE,EAAE,CADN;AAEER,EAAAA,IAAI,EAAE,QAFR;AAGES,EAAAA,KAAK,EACH,uPAJJ;AAKEP,EAAAA,MAAM,EAAE;AALV,CARgB,CAAlB;;AAiBA,SAASQ,GAAT,GAAe;AACb;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAE,IAA/B;AAAqC,IAAA,MAAM,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAE,KAA/B;AAAsC,IAAA,MAAM,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAE,KAA9B;AAAqC,IAAA,MAAM,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGH,SAAS,CAACI,GAAV,CAAcC,GAAG,IAChB,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACJ,EADX;AAEE,IAAA,IAAI,EAAEI,GAAG,CAACZ,IAFZ;AAGE,IAAA,GAAG,EAAEY,GAAG,CAACH,KAHX;AAIE,IAAA,MAAM,EAAEG,GAAG,CAACV,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANH,CADF;AAiBD;;AAED,eAAeQ,GAAf","sourcesContent":["import React from \"react\";\nimport Potato from \"./Potato.js\";\nimport PropTypes from \"prop-types\";\nimport { waitForDomChange } from \"@testing-library/react\";\n\n// To work from localhost web, Do '$ npm start' and Don't kill console\n\n// Automatic refesh web from react\n// Generate element with react and App.js\n// and Put html in div.id=root of index.html virtually\n\n// Food(props) : props is object. object.name\n// Food({ name }) : name is value. name\nfunction Like({ name, img, rating }) {\n  // Make alt=\"\" to avoid warning\n  return (\n    <div>\n      <h1>I also like {name}</h1>\n      <h4>{rating}/5</h4>\n      <img src={img} alt={name}></img>\n    </div>\n  );\n}\n\nLike.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n\nconst gameILike = [\n  {\n    id: 1,\n    name: \"RS6\",\n    image:\n      \"https://w.namu.la/s/0684acaa1c614dd71c1d8dfcdd93e442d6d448eeffe26327a6729ccb1a57cdc8a3747cff9efeae90a1a7bb474463918a44bd2f00f68ce4869955acb745e4fb01619818165ebff3d4f330d779538607ba6f2ea1b8f708ef7b94200d66b2a55b63\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"Tarkov\",\n    image:\n      \"https://ww.namu.la/s/0172241fbd015b40724cffdb4e6cfafaf29e9630a63b94541527b3be7c42bdc765ce59a0b9e628e2f94303453739ea733da03fffab11f7199bcca39c3ae8b83670e260d51bc0f36cac4b0e61f02c8b9c507aa1566cd9215e814f624750cbdfc6b7e4636996a55ed5480adb7400fb4b68\",\n    rating: 4\n  }\n];\n\nfunction App() {\n  // Keep element unique, Make id in list and Send key={element.id} to component\n  return (\n    <div>\n      <h1>Hello!</h1>\n      <Potato />\n      <Like name=\"kimchi\" isKoreans={true} rating={2} />\n      <Like name=\"cheese\" isKoreans={false} rating={5} />\n      <Like name=\"sushi\" isKoreans={false} rating={5} />\n      {gameILike.map(ele => (\n        <Like\n          key={ele.id}\n          name={ele.name}\n          img={ele.image}\n          rating={ele.rating}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}